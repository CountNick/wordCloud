(function () {
    'use strict';

    // console.log('d3: ', d3.layout.cloud)
    // require('dotenv').config()
    // import {} from '../node_modules/dotenv/config.js'
    // require('dotenv').config()
    //statically import Api key from .env
    var apiKey = 'ac376b551068c8c27baefdfd5b9c8c6a';
    fetch("http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=Darkthrone&api_key=".concat(apiKey, "&format=json")).then(function (res) {
      return res.json();
    }).then(function (data) {
      return organiseData(data);
    }).then(function (organiseData) {
      return makeWordCloud(organiseData);
    });

    function organiseData(data) {
      var artistTopTracks = data.toptracks.track.map(function (track) {
        return {
          rank: +track['@attr'].rank,
          song: track.name,
          playCount: +track.playcount,
          listeners: +track.listeners,
          artist: track.artist.name
        };
      });
      return artistTopTracks;
    }

    function makeWordCloud(data) {
      console.log('data: ', data);
      var svg = d3.select('svg');
      var width = +svg.attr('width');
      var height = +svg.attr('height'); //const yValue = d => d.origin;
      var layout = d3.layout.cloud().size([width, height]).words(data.map(function (d) {
        return {
          text: d.song,
          size: d.rank,
          playCount: d.playCount,
          listeners: d.listeners,
          artist: d.artist
        };
      })).padding(5).rotate(function () {
        return ~~(Math.random() * 2) * 90;
      }).fontSize(function (d) {
        return d.size;
      }).on('end', draw);
      layout.start();

      function draw(words) {
        var tip = d3.tip().attr('class', 'd3-tip').offset([-10, 0]).html(function (d) {
          console.log('d: ', d);
          return '<h2>' + d.artist + '</h2> <br> <strong>track: ' + d.text + '</strong>';
        });
        svg.append('g').call(tip).attr("transform", "translate(" + layout.size()[0] / 2 + "," + layout.size()[1] / 2 + ")").selectAll('text').data(words).enter().append('text').style('font-size', function (d) {
          return d.size;
        }).style('fill', '#FFFFFF').attr('text-anchor', 'middle').style("font-family", "OldLondon").attr("transform", function (d) {
          return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
        }).text(function (d) {
          return d.text;
        }).on('mouseover', tip.show).on('mouseout', tip.hide);
      }
    }

}());
